# Copyright 2025 Canonical Ltd.
# See LICENSE file for licensing details.
name: pyroscope-coordinator-k8s
type: charm

assumes:
  - k8s-api
  - juju >= 3.6.0

description: |
  Pyroscope is a distributed profiling backend by Grafana.

summary: |
  Pyroscope is a distributed profiling backend by Grafana.

containers:
  nginx:
    resource: nginx-image
  nginx-prometheus-exporter:
    resource: nginx-prometheus-exporter-image

resources:
  nginx-image:
    type: oci-image
    description: OCI image for nginx
    upstream-source: ubuntu/nginx:1.24-24.04_beta
  nginx-prometheus-exporter-image:
    type: oci-image
    description: OCI image for nginx-prometheus-exporter
    upstream-source: ubuntu/nginx-prometheus-exporter:1.4-24.04_stable

links:
  documentation: https://discourse.charmhub.io/t/18121
  website: https://charmhub.io/pyroscope-coordinator-k8s
  source: https://github.com/canonical/pyroscope-operators/tree/main/coordinator
  issues: https://github.com/canonical/pyroscope-operators/issues

provides:
  pyroscope-cluster:
    interface: pyroscope_cluster
    description: |
      Connect any number of pyroscope-worker-k8s charms to cluster the Pyroscope components off to different nodes.
      The charm needs this integration to work.
  grafana-dashboard:
    optional: true
    interface: grafana_dashboard
    description: |
      Provide a grafana dashboard definition for monitoring Pyroscope.
  grafana-source:
    optional: true
    interface: grafana_datasource
    description: |
      Provide a grafana datasource for querying Pyroscope data from Grafana.
  metrics-endpoint:
    optional: true
    interface: prometheus_scrape
    description: |
      Provide one or more Prometheus metrics endpoints that can be scraped to obtain 
      metrics of all Pyroscope worker processes.
  send-datasource:
    optional: true
    interface: grafana_datasource_exchange
    description: |
      Provide this charm's datasource identification data and endpoints to another charm.

requires:
  s3:
    interface: s3
    limit: 1
    description: |
      Request an s3 bucket for profile data storage. The charm needs this integration to work.
  charm-tracing:
    optional: true
    interface: tracing
    description: |
      Request a tracing endpoint through which Pyroscope will send its charm traces to a 
      tracing backend.
    limit: 1
  workload-tracing:
    optional: true
    interface: tracing
    description: |
      Request a tracing endpoint through which all Pyroscope workers will send their 
      workload traces to a tracing backend.
    limit: 1
  logging:
    optional: true
    interface: loki_push_api
    description: |
      Request a loki-push-api endpoint for all worker's Pyroscope application logs.
  certificates:
    optional: true
    interface: tls-certificates
    limit: 1
    description: |
      Request a certificate and key files for securing Pyroscope internal and external
      communications with TLS.
  catalogue:
    optional: true
    interface: catalogue
    description: |
      Request an entry in a central application catalogue, to help users discover Pyroscope's UI.
  ingress:
    interface: traefik_route
    optional: true
    limit: 1
    description: |
      Request ingress endpoints to load-balance any incoming http and grpc traffic
      across all coordinator units.

peers:
  peers:
    interface: pyroscope_peers
    description: |
      Peer relation for internal coordination.

platforms:
  ubuntu@24.04:amd64:

parts:
  charm:
    source: .
    plugin: uv
    build-packages: [git] # handy for git+ dependencies during development
    build-snaps: [astral-uv]
    # FIXME: override-build with "git describe --always > $CRAFT_PART_INSTALL/version" causes
    # charm pack to fail "fatal: not a git repository (or any of the parent directories): .git"

config:
  options:
    cpu_limit:
      description: |
        K8s cpu resource limit, e.g. "1" or "500m". Default is unset (no limit). This value is used
        for the "limits" portion of the resource requirements.
        See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      type: string

    memory_limit:
      description: |
        K8s memory resource limit, e.g. "1Gi". Default is unset (no limit). This value is used
        for the "limits" portion of the resource requirements.
        See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
      type: string